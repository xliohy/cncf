apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev
  labels:
    app: dev
spec:
  selector:
    matchLabels:
      app: dev
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-python: "trace-instrumentation" # deployment가 아니라, pods에게 annotations 추가해야함.
      labels:
        app: dev
    spec:
      serviceAccountName: dev
      terminationGracePeriodSeconds: 5
######################################## Auto-instrumentation ######################################
      securityContext:  # Pod 전체에 적용
        fsGroup: 1000  # 볼륨에 대한 그룹 ID 설정
        runAsGroup: 1000  # 프로세스를 실행할 그룹 ID 지정
        runAsNonRoot: true  # 루트 사용자가 아닌 사용자로 실행 강제
        runAsUser: 1000  # 프로세스를 실행할 사용자 ID 지정
      containers:
      - name: server  # 컨테이너 이름
        securityContext:  # 컨테이너 개별 보안 컨텍스트 설정
          allowPrivilegeEscalation: false  # 권한 상승 방지
          capabilities:
            drop:
              - ALL  # 모든 추가 Linux capabilities 제거
          privileged: false  # 컨테이너를 privileged 모드로 실행하지 않음
          readOnlyRootFilesystem: true  # 루트 파일 시스템을 읽기 전용으로 설정
      # securityContext를 사용하는 이유
        # -> Auto-instrumentation이 이 애플리케이션을 분석할 수 있도록 보장하기 위해 securityContext를 설정하여 비루트(non-root) 사용자로 실행되도록 구성
######################################## Auto-instrumentation ###################################### 

        image: rutush10/otel-autoinstrumentation-fastapi-simple-app:0.0.4
        ports:
        - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: dev
  labels:
    app: dev
spec:
  type: ClusterIP
  selector:
    app: dev
  ports:
  - name: tcp
    port: 8000
    targetPort: 8000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dev
---

# rutush10/otel-autoinstrumentation-fastapi-simple-app:0.0.4