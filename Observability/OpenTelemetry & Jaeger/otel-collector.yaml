apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector-trace
  namespace: otel
spec:
  mode: deployment # deployment(default) , daemonset , sidecar , staeful
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector

  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317 # grpc endpoint 
          http:
            endpoint: 0.0.0.0:4318 # http endpoint 

    processors:
      memory_limiter:  # Collector의 메모리 사용량을 제한하여 OOM 방지
        check_interval: 1s  # 1초마다 메모리 사용량을 체크
        limit_percentage: 75  # 전체 사용 가능한 메모리의 75%까지 사용 가능
        spike_limit_percentage: 15  # 단기적인 메모리 급증(spike)이 15%를 초과하지 않도록 제한
      batch:  # 데이터를 일정량씩 묶어서 처리하여 성능 최적화
        send_batch_size: 10000  # 한 번에 전송하는 데이터(batch) 크기 설정 (10,000개)
        timeout: 10s  # 10초마다 배치를 강제로 전송          

    exporters:
      debug: {}
      otlp/jaeger:
        endpoint: jaeger-inmemory-instance-collector.jaeger.svc.cluster.local:4317 # jaeger Collector 주소
        tls:
          insecure: true # TLS 인증서 무시시

    service:
      pipelines:  # receivers -> processors -> exporters 순서대로 실행
        traces:
          receivers: [otlp]  # OTLP 데이터를 수신
          processors: [memory_limiter, batch]  # 메모리 제한 및 배치 처리를 수행
          exporters: [otlp/jaeger, debug]  # Jaeger 및 디버그 출력으로 내보냄